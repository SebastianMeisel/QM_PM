:LaTeX_PROPERTIES:
#+LANGUAGE: de
#+OPTIONS: d:nil todo:nil pri:nil tags:nil
#+OPTIONS: H:4
#+LaTeX_CLASS: orgstandard
#+LaTeX_CMD: xelatex
#+LATEX_HEADER: \usepackage{listings}
:END:

:REVEAL_PROPERTIES:
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: league
#+REVEAL_EXTRA_CSS: ./mystyle.css
#+REVEAL_HLEVEL: 2
#+OPTIONS: timestamp:nil toc:nil num:nil
:END:

#+TITLE: Verbesserung
#+SUBTITLE: Qualitätsmanagement
#+AUTHOR: KOM-ITIL

* Die Theorie der vollständigen Handlung
Bevor wir uns mit dem PDCA-Zyklus beschäftigen, lohnt sich ein kurzer Blick auf die "Theorie der vollständigen Handlung".
#+BEGIN_NOTES
Diese stammt aus der Pädagogik und beschreibt, wie man am besten lernt und arbeitet.
#+END_NOTES
Eine vollständige Handlung besteht aus folgenden Schritten:

#+ATTR_REVEAL: :frag (appear)
1) *Informieren* – Was ist die Aufgabe? Was sind die Anforderungen?
2) *Planen* – Wie gehe ich vor? Welche Ressourcen brauche ich?
3) *Entscheiden* – Welche Lösung wähle ich?
4) *Ausführen* – Umsetzung der geplanten Handlung.
5) *Kontrollieren* – Habe ich das Ziel erreicht?
6) *Bewerten* – Was kann ich beim nächsten Mal besser machen?

#+BEGIN_NOTES
Warum ist das wichtig? Weil Lernen und Arbeiten dann besonders effektiv sind, wenn man den gesamten Zyklus durchläuft und nicht nur einzelne Schritte davon macht.
#+END_NOTES


* Der PDCA-Zyklus
Jetzt kommen wir zum *PDCA-Zyklus*, auch bekannt als *Deming-Kreis* (nach William Edwards Deming) oder *Shewhart-Zyklus* (nach Walter Shewhart).

<<<<<<< HEAD
 Der PDCA-Zyklus ist nicht einfach nur eine Wiederholung der vollständigen Handlung, sondern setzt auf einer höheren Ebene an: Er dient der systematischen Verbesserung von Prozessen und Produkten.
=======
#+BEGIN_NOTES
Beides waren Statistiker. Der PDCA-Zyklus basiert daher stark auf dem Sammeln und Auswerten von Leistungsdaten.
#+END_NOTES

Der PDCA-Zyklus ist nicht einfach nur eine Wiederholung der vollständigen Handlung, sondern setzt auf einer höheren Ebene an: Er dient der systematischen Verbesserung von Prozessen und Produkten.

#+REVEAL: split

*Unterschiede zur vollständigen Handlung:*

#+ATTR_REVEAL: :frag (appear)
- Die vollständige Handlung fokussiert auf das *Erledigen einzelner Aufgaben*.
- Der PDCA-Zyklus fokussiert auf die *Verbesserung von Prozessen*.
- Die vollständige Handlung hat einen definierten *Anfang und Ende*.
- Der PDCA-Zyklus ist ein *kontinuierlicher Kreislauf*.
- Die vollständige Handlung ist *aufgabenorientiert*.
- Der PDCA-Zyklus ist *ergebnis- und datenorientiert*.
>>>>>>> 55f4541 (PDCA überarbeitet)

#+BEGIN_NOTES
Während die Theorie der vollständigen Handlung sich darauf konzentriert, dass man eine Aufgabe vollständig ausführt und daraus lernt, stellt der PDCA-Zyklus eine Methode dar, um kontinuierlich besser zu werden.
#+END_NOTES

* Die vier Phasen des PDCA-Zyklus

#+ATTR_HTML: :width 50%
#+ATTR_LATEX: :width .65\linewidth :placement [!htpb]
#+ATTR_ORG: :width 700
[[file:img/PDCA.png]]
#+REVEAL: split

#+BEGIN_tolearn
#+ATTR_REVEAL: :frag (appear)
- P :: lan: Verbesserungen planen
- D :: o: Verbesserungen umsetzen, testen und dokumentieren
- C :: heck: Analyse der Wirksamkeit und möglicher Probleme
- A :: ct: Überführung in Preoduktsbetrieb oder Anpassung
#+END_tolearn

** Plan (Planen)
– Die Grundlage für Verbesserungen legen
#+BEGIN_NOTES
In dieser Phase wird der Grundstein für die Verbesserung gelegt. Hier geht es darum, das Problem genau zu analysieren und eine Strategie zu entwickeln.
#+END_NOTES

#+ATTR_REVEAL: :frag (appear)
- *Problem erkennen:* Was läuft nicht optimal? Wo gibt es Verbesserungspotenzial?
- *Daten sammeln:* Gibt es bereits Erfahrungen oder Messwerte, die helfen?
- *Ursachen analysieren:* Was sind die wahren Gründe für das Problem?
- *Ziele setzen:* Was soll konkret verbessert werden?
- *Maßnahmen planen:* Welche Schritte führen zur Lösung?

#+REVEAL: split

*Methoden und Werkzeuge für die Plan-Phase:*

#+ATTR_REVEAL: :frag (appear)
- *Ishikawa-Diagramm:* Zur strukturierten Ursachenanalyse
- *5-Why-Methode:* Zum Ergründen der Grundursachen
- *SMART-Ziele:* Spezifisch, Messbar, Attraktiv, Realistisch, Terminiert
- *Kennzahlen definieren:* Was wird gemessen, um Erfolg zu bestimmen?

#+BEGIN_NOTES
<<<<<<< HEAD
- Beispiel aus der IT: :: Ein Unternehmen hat viele Serverausfälle. In der Plan-Phase wird untersucht, woran es liegt – vielleicht sind es veraltete Komponenten, schlechte Wartung oder Softwareprobleme.
=======
- Beispiel aus der IT: Ein Unternehmen hat viele Serverausfälle. In der Plan-Phase wird untersucht, woran es liegt – vielleicht sind es veraltete Komponenten, schlechte Wartung oder Softwareprobleme. Entsprechende Maßnahmen werden geplant.
- Weitere IT-Beispiele: Optimierung von Entwicklungsprozessen, Reduzierung von Supportanfragen, Verbesserung der Kundenzufriedenheit mit IT-Services.
>>>>>>> 55f4541 (PDCA überarbeitet)
#+END_NOTES

** Do (Tun)
– Die Umsetzung der Maßnahmen
#+BEGIN_NOTES
Nachdem der Plan steht, geht es in die praktische Umsetzung.
#+END_NOTES
#+ATTR_REVEAL: :frag (appear)
- *Lösung testen:* In einem kleinen, kontrollierten Rahmen ausprobieren.
- *Pilotprojekt durchführen:* Die Maßnahme an einem Beispielsystem testen.
- *Daten sammeln:* Wie wirkt sich die Änderung aus?
- *Dokumentation:* Was wurde genau gemacht?

#+REVEAL: split

*Wichtige Aspekte der Dokumentation:*

#+ATTR_REVEAL: :frag (appear)
- *Prozessbeschreibungen:* Wie wurden die Maßnahmen umgesetzt?
- *Änderungshistorie:* Was wurde wann geändert?
- *Fehlerprotokolle:* Welche Probleme traten auf und wie wurden sie gelöst?
- *Testprotokolle:* Welche Tests wurden durchgeführt und mit welchem Ergebnis?

#+BEGIN_NOTES
In der IT könnte das bedeuten, dass ein neuer Überwachungsdienst auf einem Testserver installiert wird, bevor er auf allen Systemen ausgerollt wird.
Weitere Beispiele: Einführung neuer Entwicklungsmethoden in einem Pilotteam, Tests von neuen Sicherheitsmaßnahmen in einer kontrollierten Umgebung.
#+END_NOTES

** Check (Überprüfen)
– Hat die Maßnahme funktioniert?

#+ATTR_REVEAL: :frag (appear)
- *!! Wichtig !!* Es geht hier *nicht* darum, das Erfüllen einzelner Maßnahmen zu prüfen, wie auf einer Checkliste. Auch Testen und Fehlerkorrektur finden nicht hier, sondern in der Do-Phase statt.

- Stattdessen geht es um eine *umfassende Analyse* der Ergebnisse:

#+ATTR_REVEAL: :frag (appear)
- *Ergebnisse vergleichen:* Hat sich die Situation verbessert?
- *Fehler analysieren:* Gibt es unerwartete Nebenwirkungen?
- *Daten auswerten:* Stimmen die vorhergesagten Effekte mit der Realität überein?

#+REVEAL: split

*Methoden für die Check-Phase:*

#+ATTR_REVEAL: :frag (appear)
- *Statistische Auswertungen:* Trends, Abweichungen, Korrelationen
- *Vorher-Nachher-Vergleich:* Quantitative Bewertung der Verbesserung
- *KPI-Messung:* Haben sich die definierten Leistungskennzahlen verbessert?
- *Ursachenanalyse bei Abweichungen:* Warum wurden die Ziele erreicht oder nicht erreicht?

#+BEGIN_NOTES
<<<<<<< HEAD
- Ein IT-Beispiel: Nachdem der neue Überwachungsdienst getestet wurde, wird geprüft, ob sich die Erreichbarkeit der Server verbessert hat oder ob es neue Probleme gibt.
=======
- Ein IT-Beispiel: Nachdem der neue Überwachungsdienst getestet wurde, wird geprüft, ob sich die Erreichbarkeit der Server verbessert hat oder ob es neue Probleme gibt. Dies geschieht durch die statistische Auswertung der Daten, die in der Do-Phase gesammelt wurden.
- Weitere Beispiele: Analyse, ob neue Entwicklungsmethoden tatsächlich die Fehlerrate reduziert haben, Messung der Reaktionszeit nach Optimierung der Supportprozesse.
>>>>>>> 55f4541 (PDCA überarbeitet)
#+END_NOTES

** Act (Handeln)
– Erkenntnisse in den Regelbetrieb übernehmen
#+BEGIN_NOTES
Wenn sich die Maßnahme bewährt hat, wird sie auf breiter Basis eingeführt. Falls nicht, beginnt der Zyklus von vorne.
#+END_NOTES
#+ATTR_REVEAL: :frag (appear)
- *Lösung standardisieren:* Erfolgreiche Änderungen in Prozesse überführen.
- *Schulungen und Dokumentation:* Mitarbeiter einweisen, Dokumentationen aktualisieren.
- *Erneute Planung:* Falls nötig, beginnt der Zyklus mit neuen Erkenntnissen von vorne.

#+REVEAL: split

*Wichtige Aspekte für erfolgreiche Standardisierung:*

#+ATTR_REVEAL: :frag (appear)
- *Prozessdokumentation:* Klare Beschreibung des neuen Standards
- *Mitarbeiterbeteiligung:* Einbeziehen aller Betroffenen
- *Change Management:* Umgang mit Widerständen und Bedenken
- *Nachhaltigkeit sichern:* Regelmäßige Überprüfung der Einhaltung

#+BEGIN_NOTES
- Beispiel: Falls der neue Überwachungsdienst zuverlässig funktioniert, wird er auf alle Server ausgerollt. Falls nicht, wird über eine alternative Lösung nachgedacht.
- Weitere Beispiele: Einführung neuer Coding-Standards im gesamten Entwicklungsteam, Implementierung optimierter Supportprozesse für die gesamte IT-Abteilung.
#+END_NOTES

* KVP
– Kontinuierlicher Verbesserungsprozess
Der **KVP (kontinuierlicher Verbesserungsprozess)* basiert auf dem PDCA-Zyklus. Die Idee dahinter: Man hört nie auf, nach besseren Lösungen zu suchen. Fehler und Probleme sind keine Katastrophen, sondern Gelegenheiten, um zu lernen und Abläufe zu optimieren.

#+REVEAL: split

*Die Integration von PDCA im KVP:*

#+ATTR_REVEAL: :frag (appear)
- *PDCA als Methodik:* Der PDCA-Zyklus bildet das methodische Fundament für KVP.
- *Zusätzliche KVP-Elemente:* 
  - Mitarbeiterbeteiligung auf allen Ebenen
  - Kleine, kontinuierliche Verbesserungen statt großer Umwälzungen
  - Fokus auf Prozessoptimierung und Fehlervermeidung
  - Kulturwandel hin zu einer "Lernenden Organisation"

#+REVEAL: split

*KVP in der IT-Praxis:*

#+ATTR_REVEAL: :frag (appear)
- *Softwareentwicklung:* 
  - Code-Reviews und Refactoring als Standard
  - Kontinuierliche Integration und Tests
  - Retrospektiven in agilen Teams

- *Systemadministration:* 
  - Automatisierung von wiederkehrenden Aufgaben
  - Proaktives Monitoring statt reaktives Handeln
  - Standardisierte Betriebsprozesse

- *IT-Sicherheit:* 
  - Regelmäßige Sicherheitsaudits
  - Vorausschauendes Patch-Management
  - Analyse von Sicherheitsvorfällen und Präventionsmaßnahmen

#+REVEAL: split

*Verbindung zu anderen Qualitätsmanagement-Ansätzen:*

#+ATTR_REVEAL: :frag (appear)
- *ISO 9001:* PDCA ist ein zentrales Element des Prozessansatzes
- *Six Sigma:* DMAIC-Zyklus (Define, Measure, Analyze, Improve, Control) als Erweiterung von PDCA
- *Lean Management:* Kaizen (kontinuierliche Verbesserung) als japanische Variante des KVP
- *ITIL:* Service Improvement als eigenständiger Bereich des IT-Service-Managements

#+BEGIN_NOTES
Der PDCA-Zyklus sorgt dafür, dass Verbesserungen kein Zufall sind, sondern systematisch angegangen werden. Er ist die Grundlage für eine kontinuierliche Verbesserungskultur in Organisationen.
#+END_NOTES

