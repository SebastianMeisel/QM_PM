:LaTeX_PROPERTIES:
#+LANGUAGE: de
#+OPTIONS: d:nil todo:nil pri:nil tags:nil
#+OPTIONS: H:4
#+LaTeX_CLASS: orgstandard
#+LaTeX_CMD: xelatex
#+LATEX_HEADER: \usepackage{listings}
:END:

:REVEAL_PROPERTIES:
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: league
#+REVEAL_EXTRA_CSS: ./mystyle.css
#+REVEAL_HLEVEL: 2
#+OPTIONS: timestamp:nil toc:nil num:nil
:END:

#+TITLE: Six Sigma und TQM
#+SUBTITLE: Qualitätsmanagement
#+AUTHOR: KOM-ITIL


* Was ist Six Sigma?
Six Sigma ist eine datengestützte Methodik zur Verbesserung von Geschäftsprozessen durch Minimierung von Fehlern und Variabilität. Ursprünglich in der Fertigung entwickelt, wurde es inzwischen in verschiedenen Branchen, einschließlich der IT, eingeführt, um Effizienz zu steigern, Fehler zu reduzieren und die Servicequalität zu verbessern.

Es basiert sehr stark auf dem PDCA-Zyklus passt diesen an.

** Ursprung der Bezeichnung

Der Name *Six Sigma* stammt aus der Statistik und bezieht sich auf die Standardabweichung (σ, gesprochen "Sigma") in einem Prozess. Eine hohe Sigma-Stufe bedeutet, dass ein Prozess sehr stabil ist und nur wenige Fehler aufweist. Das Ziel von Six Sigma ist es, Prozesse so zu verbessern, dass sie innerhalb der definierten Toleranzgrenzen liegen und weniger als 3,4 Fehler pro eine Million Möglichkeiten auftreten.

*** Was ist eine Standardabweichung und eine Toleranzgrenze?
- *Standardabweichung (σ)* beschreibt, wie stark einzelne Werte von einem Durchschnittswert abweichen. Eine geringe Standardabweichung bedeutet, dass die Werte nahe am Durchschnitt liegen, eine hohe Standardabweichung bedeutet eine große Streuung.

#+CAPTION: Toleranzgrenze bei \(2 \sigma\)
#+NAME: fig:two2igma
#+begin_SRC latex :export results
\begin{tikzpicture}
    \begin{axis}[
        no markers, domain=-150:150, samples=100,
        axis lines*=left, xlabel={$t$ (Sekunden)}, ylabel={Anzahl}, 
        height=6cm, width=12cm,
        enlargelimits=false, clip=false,
        xtick={-100,10,100}, xticklabels={$\mu - 2\sigma$, $\mu$, $\mu + 2\sigma$},
        ytick=\empty
    ]
    \addplot[blue, thick] {exp(-0.5*((x-10)/50)^2)};
    
    % Markiere die Standardabweichung (Sigma-Bereiche)
    \addplot[red, thick, dashed] coordinates {( -90,0) (-90,0.8)};
    \addplot[red, thick, dashed] coordinates {( 110,0) (110,0.8)};
    
    % Markiere den Mittelwert
    \addplot[black, thick, dashed] coordinates {(10,0) (10,1)};
    \node[above] at (axis cs:10,1) {$\mu$};
    %% \node[below] at (axis cs:-100,0) {$-100$};
    %% \node[below] at (axis cs:100,0) {$100$};
    \end{axis}
\end{tikzpicture}
#+END_SRC

#+CAPTION: Toleranzgrenze bei \(6 \sigma\)
#+NAME: fig:sixsigma
#+begin_SRC latex :export results
\begin{tikzpicture}
    \begin{axis}[
        no markers, domain=-150:150, samples=100,
        axis lines*=left, xlabel={$t$ (Sekunden)}, ylabel={Anzahl},
        height=6cm, width=12cm,
        enlargelimits=false, clip=false,
        xtick={-100,10,100}, xticklabels={$\mu - 6\sigma$, $\mu$, $\mu + 6\sigma$},
        ytick=\empty
    ]
    \addplot[blue, thick] {exp(-0.5*((x-10)/16.67)^2)};
    
    % Markiere die Standardabweichung (Sigma-Bereiche)
    \addplot[red, thick, dashed] coordinates {( -90,0) (-90,0.8)};
    \addplot[red, thick, dashed] coordinates {( 110,0) (110,0.8)};
    
    % Markiere den Mittelwert
    \addplot[black, thick, dashed] coordinates {(10,0) (10,1)};
    \node[above] at (axis cs:10,1) {$\mu$};
    %% \node[below] at (axis cs:-100,0) {$-100$};
    %% \node[below] at (axis cs:100,0) {$100$};
    \end{axis}
\end{tikzpicture}
#+END_SRC



#+REVEAL: split
- *Toleranzgrenze* bezeichnet den Bereich, in dem ein Wert noch als akzeptabel gilt. Alles außerhalb dieser Grenze gilt als Fehler.

*Beispiel:* Stell dir vor, du arbeitest in einer IT-Abteilung, die eine maximale Antwortzeit von 2 Sekunden für eine Webseite garantieren möchte. Die durchschnittliche Ladezeit liegt bei 1,5 Sekunden, aber es gibt Abweichungen. Wenn die meisten Ladezeiten zwischen 1,4 und 1,6 Sekunden liegen, ist die Standardabweichung gering und der Prozess stabil. Falls jedoch einige Seiten 3 oder 4 Sekunden zum Laden brauchen, ist die Standardabweichung hoch und Optimierungen sind notwendig, um innerhalb der Toleranzgrenzen zu bleiben.

** Warum ist Six Sigma für IT-Fachkräfte relevant?
#+ATTR_REVEAL: :frag (appear)
  - Prozessverbesserung :: – IT-Fachkräfte können Six-Sigma-Prinzipien anwenden, um Arbeitsabläufe zu optimieren, Systemausfallzeiten zu reduzieren und Reaktionszeiten zu verbessern.
  - Qualitätsmanagement :: – Hilft dabei, Fehler in der Softwareentwicklung, Systemadministration und IT-Service-Management zu identifizieren und zu beseitigen.
  - Datengetriebene Entscheidungsfindung :: – Fördert einen systematischen Ansatz zur Problemlösung durch statistische Analyse und Datensammlung.
  - Kostensenkung :: – Spart Ressourcen, indem Verschwendung minimiert und die Leistung optimiert wird.
  - Karriereentwicklung :: – Kenntnisse in Six Sigma verbessern die Berufsaussichten und erhöhen den Wert in IT-Rollen.
** Zentrale Konzepte von Six Sigma
#+CAPTION: Von C64zottel - Eigenes Werk, CC BY-SA 4.0
#+ATTR_HTML: :width 50%
#+ATTR_LATEX: :width .65\linewidth :placement [!htpb]
#+ATTR_ORG: :width 700
[[file:img/DMAIC-Zyklus.png]]
*** DMADV
Ein strukturierter Ansatz neuer Prozesse
#+ATTR_REVEAL: :frag (appear)
  - Define (Definieren) :: – Kundenanforderungen und Projektziele bestimmen.
  - Measure (Messen) :: – Kritische Erfolgsfaktoren und Kundenbedürfnisse ermitteln.
  - Analyze (Analysieren) :: – Innovative Lösungen für die Anforderungen entwickeln.
  - Design (Gestalten) :: – Einen neuen, optimierten Prozess entwerfen.
  - Verify (Verifizieren) :: – Den neuen Prozess testen und validieren.
*** DMAIC-Zyklus:

Ein strukturierter Ansatz zur Prozessverbesserung.
#+ATTR_REVEAL: :frag (appear)
  -  Define (Definieren) :: Problem und Ziele identifizieren.
  -  Measure (Messen) :: Relevante Daten sammeln, um die aktuelle Leistung zu verstehen.
  -  Analyze (Analysieren) :: Daten untersuchen, um die Ursachen von Fehlern zu finden.
  -  Improve (Verbessern) :: Lösungen implementieren, um die Ursachen zu beseitigen.
  -  Control (Steuern) :: Verbesserungen durch Überwachung und Standardisierung aufrechterhalten.
*** Rollen in Six Sigma:
#+ATTR_REVEAL: :frag (appear)
  -  Champion ::  Sponsor und Unterstützer von Six-Sigma-Projekten.
  -  Master Black Belt ::  Expertenlevel-Mentor für Six-Sigma-Fachkräfte.
  -  Black Belt ::  Leitet Verbesserungsprojekte und führt Datenanalysen durch.
  -  Green Belt ::  Unterstützt Six-Sigma-Projekte und wendet Methoden in seiner Arbeit an.
  -  Yellow Belt ::  Verfügt über grundlegendes Verständnis und nimmt an Projekten teil.
** Anwendung von Six Sigma in der IT
  - Softwareentwicklung :: – Fehlerreduzierung und Verbesserung der Codequalität.
  - IT-Support und Helpdesk :: – Verkürzung der Reaktionszeiten und Steigerung der Benutzerzufriedenheit.
  - Cybersecurity :: – Verbesserung der Bedrohungserkennungsprozesse.
  - Infrastrukturmanagement :: – Minimierung von Ausfallzeiten und Optimierung der Ressourcennutzung.
  - Cloud Computing :: – Effizientere Bereitstellung und Reduzierung betrieblicher Risiken.



* Was ist TQM? 
Total Quality Management (TQM) ist ein umfassender Managementansatz, der darauf abzielt, die Qualität von Produkten, Dienstleistungen und Prozessen in einer Organisation kontinuierlich zu verbessern. Der Fokus liegt auf der Einbindung aller Mitarbeiter und der Optimierung der gesamten Wertschöpfungskette.

** Grundprinzipien von TQM
#+ATTR_REVEAL: :frag (appear)
  - Kundenorientierung :: – Die Kundenzufriedenheit steht im Mittelpunkt aller Aktivitäten.
  - Ganzheitlicher Qualitätsansatz :: – Qualität betrifft alle Abteilungen und Prozesse.
  - Mitarbeiterbeteiligung :: – Jeder Mitarbeiter trägt zur Qualitätsverbesserung bei.
  - Prozessorientierung :: – Ständige Überprüfung und Optimierung der Abläufe.
  - Kontinuierliche Verbesserung (Kaizen) :: – Qualität wird fortlaufend weiterentwickelt.
  - Faktenbasierte Entscheidungsfindung :: – Daten und Analysen steuern Qualitätsmaßnahmen.
  - Partnerschaft mit Lieferanten :: – Qualität beginnt bereits in der Lieferkette.

** Die Rolle von TQM in der IT
#+ATTR_REVEAL: :frag (appear)
  - Softwareentwicklung :: – Einführung von Qualitätsstandards zur Fehlervermeidung.
  - IT-Support :: – Verbesserung der Servicequalität durch strukturierte Prozesse.
  - IT-Sicherheit :: – Implementierung von Standards zur Risikominimierung.
  - Projektmanagement :: – Anwendung von Qualitätsmethoden zur besseren Steuerung.

** Methoden und Werkzeuge von TQM
#+ATTR_REVEAL: :frag (appear)
  - PDCA-Zyklus (Plan-Do-Check-Act) :: – Systematische Verbesserung von Prozessen.
  - Benchmarking :: – Vergleich mit Best Practices führender Unternehmen.
  - Fehlermöglichkeits- und Einflussanalyse (FMEA) :: – Identifikation potenzieller Fehlerquellen.
  - Statistische Prozesskontrolle (SPC) :: – Überwachung und Steuerung der Qualität.

